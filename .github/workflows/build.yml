name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  # Build Python Package
  build-package:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine
      - name: Build package
        run: python -m build
      - name: Store dist
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist/

  # Build Windows Executable
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
      - name: Build with PyInstaller
        run: pyinstaller --onefile --name scheduleai src/cli.py
      - name: Create Windows Installer
        run: |
          # Here you would use a tool like NSIS or InnoSetup to create an installer
          # For simplicity, we'll just zip the executable
          Compress-Archive -Path dist/scheduleai.exe -DestinationPath dist/scheduleai-windows.zip
      - name: Upload Windows artifact
        uses: actions/upload-artifact@v3
        with:
          name: windows-build
          path: dist/scheduleai-windows.zip

  # Build macOS Application
  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
      - name: Build with PyInstaller
        run: pyinstaller --onefile --name scheduleai src/cli.py
      - name: Create DMG
        run: |
          # For a real app, you might want to use create-dmg or similar tools
          # For simplicity, we'll just zip the executable
          cd dist && zip -r scheduleai-macos.zip scheduleai
      - name: Upload macOS artifact
        uses: actions/upload-artifact@v3
        with:
          name: macos-build
          path: dist/scheduleai-macos.zip

  # Create GitHub Release
  release:
    needs: [build-package, build-windows, build-macos]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/dist/*
            artifacts/windows-build/*
            artifacts/macos-build/*
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Publish to PyPI
  publish:
    needs: [release]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Download dist artifact
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}